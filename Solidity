pragma solidity ^0.8.0;

contract Escrow {
    address public payer;
    address public payee;
    address public arbitrator;
    uint public escrowAmount;
    bool public isPaid;
    bool public isCompleted;

    constructor(address _payee, address _arbitrator) payable {
        payer = msg.sender;
        payee = _payee;
        arbitrator = _arbitrator;
        escrowAmount = msg.value;
    }

    function release() public {
        require(msg.sender == payer, "Only payer can release funds");
        require(!isPaid, "Funds already released");
        isPaid = true;
        payable(payee).transfer(escrowAmount);
    }

    function refund() public {
        require(msg.sender == payee || msg.sender == arbitrator, "Only payee or arbitrator can refund funds");
        require(!isPaid, "Funds already released");
        isPaid = true;
        payable(payer).transfer(escrowAmount);
    }

    function complete() public {
        require(msg.sender == payee || msg.sender == arbitrator, "Only payee or arbitrator can complete transaction");
        require(isPaid, "Funds not released yet");
        require(!isCompleted, "Transaction already completed");
        isCompleted = true;
    }
}
